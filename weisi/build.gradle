apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.0'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 89
        versionName "3.4.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //打包后应用名称

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName
            if (outputFileName != null && outputFileName.endsWith('.aar')) {
                if (variant.buildType.name == 'release') {
                    fileName = "com.cjq.lib.weisi-${defaultConfig.versionName}.aar"
                } else if (variant.buildType.name == 'debug') {
                    fileName = "debug-${defaultConfig.versionName}.aar"
                }
                outputFileName = fileName
            }
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.0.2'
    testCompile 'junit:junit:4.12'
}

task copyAar(type: Copy) {
    from "${buildDir}/outputs/aar/"
    into "${projectDir}"
    exclude 'debug*'
    include "*${android.defaultConfig.versionName}.aar"
    println "weisi back-up completed"
}

afterEvaluate {
    tasks.matching {
        // 以process开头以ReleaseJavaRes或DebugJavaRes结尾的task
        it.name == "assembleRelease" &&
                it.project.name == "weisi"
    }.each { task ->
        //task.dependsOn(testAssembleRelease)  // 任务依赖：执行task之前需要执行dependsOn指定的任务
        task.doLast {
            tasks.copyAar.execute()
        }
    }
}