apply plugin: 'java-library'
apply plugin: 'kotlin'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

buildscript {
    ext.versionName = '0.1.4'
    ext.versionCode = 5
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task copyJar << {
    ["${projectDir}", "${rootDir}/wsc/libs", "${rootDir}/weisi/libs"].each { dest ->
        if (!dest.contains("wsb")) {
            new File(dest).listFiles().each { file ->
                if (file.name.startsWith("com.wsn.lib.wsb") && file.name.endsWith(".jar")) {
                    file.delete()
                }
            }
        }
        copy {
            from "${buildDir}/libs/"
            into dest
            exclude "debug*"
            include "wsb.jar"
            rename "wsb.jar", "com.wsn.lib.wsb-${versionName}.jar"
        }
    }
    println "wsb.jar build successfully"
}

//task copyJar(type: Copy) {
//    from "${buildDir}/libs/"
//    into "${projectDir}"
//    into
//    exclude "debug*"
//    include "wsb.jar"
//    rename "wsb.jar", "com.wsn.lib.wsb-${versionName}.jar"
//    println "wsb.jar build successfully"
//}

afterEvaluate {
    tasks.matching {
        it.project.name == "wsb" && it.name == "assemble"
    }.each { task ->
        //task.dependsOn(copyJar)
        task.doLast {
            tasks.copyJar.execute()
        }
    }
}
